#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&lt {
  tapping-term-ms = <250>;
  quick-tap-ms = <200>;
  flavor = "balanced";
};

&mt {
  tapping-term-ms = <250>;
  quick-tap-ms = <200>;
  flavor = "tap-preferred";
};

/ {
  keymap {
    compatible = "zmk,keymap";

    qwerty {
    bindings = <
      &kp Q     &kp W         &kp E         &kp R           &kp T               &kp Y      &kp U           &kp I          &kp O           &kp P
      &kp A     &mt LGUI S    &kp D         &kp F           &kp G               &kp H      &kp J           &kp K          &mt LGUI L      &kp SEMI
      &kp Z     &kp X         &kp C         &kp V           &kp B               &kp N      &kp M           &kp TAB        &kp ENTER       &kp SLASH
                              &kp LALT      &kp LSHIFT      &mo 1               &kp LCTRL  &kp SPACE       &lt 2 ESC
    >;
    };

    layer1 {
    bindings = <
      &none     &kp BACKSLASH &kp MINUS     &kp EQUAL       &none               &none      &kp N7          &kp N8         &kp N9          &none
      &kp GRAVE &kp APOS      &kp LBKT      &kp RBKT        &kp LSHIFT          &none      &kp N4          &kp N5         &kp N6          &kp BSPC
      &none     &none         &kp COMMA     &kp DOT         &none               &none      &kp N1          &kp N2         &kp N3          &none
                              &none         &none           &none               &kp LSHIFT &kp N0          &none
    >;
    };

    layer2 {
    bindings = <
      &none     &kp HOME      &kp UP        &kp END         &kp INS             &none      &none           &none          &none           &none
      &none     &kp LEFT      &kp DOWN      &kp RIGHT       &kp DEL             &none      &kp LCTRL       &kp LALT       &kp LGUI        &none
      &none     &none         &none         &none           &none               &none      &none           &none          &none           &none
                              &none         &kp LSHIFT      &none               &none      &none           &none
    >;
    };
  };
};
